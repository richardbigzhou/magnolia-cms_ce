<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>info.magnolia.bundle.test</groupId>
    <artifactId>magnolia-integration-tests-parent</artifactId>
    <version>5.5-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <groupId>info.magnolia.bundle.test</groupId>
  <artifactId>magnolia-integration-tests</artifactId>
  <name>magnolia-integration-tests</name>
  <packaging>jar</packaging>

  <prerequisites>
    <!-- the Surefire and Cargo configuration below depends on the default-IDs for default plugin executions introduced in Maven 2.2 -->
    <maven>2.2.1</maven>
  </prerequisites>

  <properties>
    <leaveContainerRunningAndDontExecuteTests>false</leaveContainerRunningAndDontExecuteTests>
    <!-- The containerHostName which will be used to access the instance -->
    <!-- In case of access from a remote host change accordingly -->
    <containerHostName>localhost</containerHostName>
    <!-- The default container http port used for tests. In CI this will be a random port. -->
    <containerHttpPort>8499</containerHttpPort>
    <!-- The port to use when communicating with this server, for example to start and stop it. -->
    <!-- This was probably causing builds to fail, as the default port was used. -->
    <cargoRmiPort>8498</cargoRmiPort>
    <!-- The hostname used to access the selenium standalone server 'http://${vmHostName}:4444/wd/hub' -->
    <!-- (please replace variables) on the virtual machine -->
    <!-- If set, tests will use a RemoteWebDriver instead of the default web driver -->
    <seleniumServerHostName />


    <cargoDebugJvmArgs />
  </properties>
  <!--
  This pom (and most of this project, for that matter), has been copied to
  http://svn.magnolia-cms.com/svn/enterprise/bundle/trunk/magnolia-ee-integration-tests/tests
  Try to keep both in sync !
  -->
  <dependencies>
    <dependency>
      <groupId>info.magnolia.bundle.test</groupId>
      <artifactId>magnolia-integration-tests-framework</artifactId>
    </dependency>

    <!-- ensure build order -->
    <dependency>
      <groupId>info.magnolia.bundle.test</groupId>
      <artifactId>magnolia-test-webapp</artifactId>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>info.magnolia.bundle.test</groupId>
      <artifactId>magnolia-test-public-webapp</artifactId>
      <type>war</type>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
    </dependency>
    <!-- Since 2.11, htmlunit requires xml-apis 1.4.01 because DomElement implements an interface that was not in 1.3, hence not in the JDK. -->
    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>1.4.01</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.james</groupId>
      <artifactId>apache-mime4j</artifactId>
      <version>0.6.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.2</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <!-- Intellij requires to have groovy in the classpath in order to compile .groovy files (which are executed with gmaven) -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <!-- have to use the same version as the gmaven plugin-->
      <version>2.2.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- And some more deps that the groovy scripts use ... -->
    <dependency>
      <groupId>net.sourceforge.nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <version>1.9.21</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <!-- For activationTest.groovy -->
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.1</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- scope import of magnolia-project overrides guava dependency of selenium
      and brings in 10.0.1 rather than the required 15.0 -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>15.0</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- let's also attach the test sources -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-test-sources</id>
            <goals>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- let surefire be executed only in the integration-test phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </execution>
          <execution>
            <id>tests-integration</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skipTests>${leaveContainerRunningAndDontExecuteTests}</skipTests>
          <!-- by default we exclude selenium tests as they need a special configuration. See also selenium profile below -->
          <excludes>
            <exclude>**/uitest/*Test.java</exclude>
          </excludes>
          <systemPropertyVariables>
            <containerHttpPort>${containerHttpPort}</containerHttpPort>
            <containerRootURL>http://${containerHostName}:${containerHttpPort}/</containerRootURL>
            <authorContextPath>magnoliaTest/</authorContextPath>
            <publicContextPath>magnoliaTestPublic/</publicContextPath>
            <!-- Parameters for running tests in virtual machine -->
            <seleniumServerHostName>${seleniumServerHostName}</seleniumServerHostName>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <container>
            <containerId>${containerId}</containerId>
            <type>${containerType}</type>
            <!--
            <output>${project.build.directory}/${containerId}.log</output>
            <log>${project.build.directory}/cargo.log</log>
            specifying empty values for output and log should result in everything being printed in the console -->
            <output />
            <log />
            <!-- 10 minutes timeout IS long, but the default 2 minutes is sometimes not enough... ?? -->
            <timeout>600000</timeout>

            <artifactInstaller>
              <groupId>${containerGroupId}</groupId>
              <artifactId>${containerArtifactId}</artifactId>
              <version>${containerVersion}</version>
              <extractDir>${basedir}/tmp/cargo-install</extractDir>
            </artifactInstaller>
            <systemProperties>
              <!--<java.io.tmpdir>${basedir}/tmp</java.io.tmpdir>-->
              <!-- The surefire variables are not exposed to container, we need these props: -->
              <containerHttpPort>${containerHttpPort}</containerHttpPort>
              <containerRootURL>http://${containerHostName}:${containerHttpPort}/</containerRootURL>
              <authorContextPath>magnoliaTest/</authorContextPath>
              <publicContextPath>magnoliaTestPublic/</publicContextPath>
              <!-- Parameters for running tests in virtual machine -->
              <seleniumServerHostName>${seleniumServerHostName}</seleniumServerHostName>
            </systemProperties>
          </container>
          <configuration>
            <type>${configType}</type>
            <home>${basedir}/tmp/cargo-home</home>
            <configfiles>
              <configfile>
                <file>${basedir}/src/test/resources/jetty-logging.xml</file>
                <todir>/etc</todir>
              </configfile>
            </configfiles>
            <properties>
              <!--
               Containers support for system properties: See "Passing system properties" and "cargo.jvmargs" on Cargo's container pages: http://cargo.codehaus.org/Jetty+6.x
               This might require an update of Cargo to work with all contains, since it was noted here before that not all containers supported this.
               This allowed us to remove most of the content of test-webapp, which is now essentially just a pom file.
               TODO : <jvmargs> used by some profiles is not passed anymore - caused issues with Tomcat
               Setting debug options causes problems at shutdown -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
              -->
              <cargo.jvmargs>${cargoDebugJvmArgs} -Dmagnolia.update.auto=true -Xmx1024M -Djava.awt.headless=true -XX:MaxPermSize=256m</cargo.jvmargs>
              <cargo.servlet.port>${containerHttpPort}</cargo.servlet.port>
              <cargo.logging>medium</cargo.logging>
              <cargo.tomcat.ajp.port>8099</cargo.tomcat.ajp.port>
              <cargo.rmi.port>${cargoRmiPort}</cargo.rmi.port>
            </properties>
          </configuration>

          <deployables>
            <deployable>
              <groupId>info.magnolia.bundle.test</groupId>
              <artifactId>magnolia-test-webapp</artifactId>
              <type>war</type>
              <properties>
                <context>magnoliaTest</context>
              </properties>
            </deployable>
            <deployable>
              <groupId>info.magnolia.bundle.test</groupId>
              <artifactId>magnolia-test-public-webapp</artifactId>
              <type>war</type>
              <properties>
                <context>magnoliaTestPublic</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <configuration>
          <providerSelection>2.0</providerSelection>
          <source>2.0</source>
          <skip>${leaveContainerRunningAndDontExecuteTests}</skip>
        </configuration>
        <executions>
          <execution>
            <id>web-crawler</id>
            <phase>integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <!-- This execution definition doesn't need site and URLPropertyPrefix properties set, because:
                1. site property: this crawler crawls stk demo pages and stk site is set in Site module by default, if this would change then add <site>/modules/standard-templating-kit/config/site</site>
                2. URLPropertyPrefix doesn't need to be set because this is first execution definition so no properties from previous execution definitions are set
              -->
              <properties>
                <login>superuser</login>
                <password>superuser</password>
                <propertyServletUrlAuthor>http://${containerHostName}:${containerHttpPort}/magnoliaTest/.magnolia/jcrprop</propertyServletUrlAuthor>
                <propertyServletUrlPublic>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/.magnolia/jcrprop</propertyServletUrlPublic>
                <site>/modules/standard-templating-kit/config/site</site>
                <geturl1>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/ftl-sample-site/</geturl1>
                <geturl2>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/jsp-sample-site/</geturl2>
                <geturl3>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/demo-project/</geturl3>
                <geturl4>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/demo-features/</geturl4>
                <geturlauth5>http://${containerHostName}:${containerHttpPort}/magnoliaTest/ftl-sample-site/</geturlauth5>
                <geturlauth6>http://${containerHostName}:${containerHttpPort}/magnoliaTest/jsp-sample-site/</geturlauth6>
                <geturlauth7>http://${containerHostName}:${containerHttpPort}/magnoliaTest/demo-project/</geturlauth7>
                <geturlauth8>http://${containerHostName}:${containerHttpPort}/magnoliaTest/demo-features/</geturlauth8>
              </properties>
              <source>${project.basedir}/src/main/groovy/crawl.groovy</source>
            </configuration>
          </execution>
          <execution>
            <id>web-crawler-travel-demo</id>
            <phase>integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <!-- This execution definition has property site set to travel demo (/modules/travel-demo/config/travel),
                crawler.groovy script sets site to travel demo -> then triggers crawling -> resets site to the previously configured site.
                URLPropertyPrefix property needs to be set to avoid crawling pages from previous execution definition, because this is not first execution definition and
                execution definition reuses properties from previous definitions. URLPropertyPrefix is set to "travel" so it means that crawler.groovy script will look
                for page properties defined with prefix "travelgeturl" or "travelgeturlauth".
              -->
              <properties>
                <login>superuser</login>
                <password>superuser</password>
                <propertyServletUrlAuthor>http://${containerHostName}:${containerHttpPort}/magnoliaTest/.magnolia/jcrprop</propertyServletUrlAuthor>
                <propertyServletUrlPublic>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/.magnolia/jcrprop</propertyServletUrlPublic>
                <site>/modules/travel-demo/config/travel</site>
                <URLPropertyPrefix>travel</URLPropertyPrefix>
                <travelgeturl1>http://${containerHostName}:${containerHttpPort}/magnoliaTestPublic/travel/</travelgeturl1>
                <travelgeturlauth2>http://${containerHostName}:${containerHttpPort}/magnoliaTest/travel/</travelgeturlauth2>
              </properties>
              <source>${project.basedir}/src/main/groovy/crawl.groovy</source>
            </configuration>
          </execution>
          <execution>
            <id>log-parser</id>
            <phase>integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <properties>
                <logspath>${project.basedir}/tmp/cargo-home/logs/</logspath>
              </properties>
              <source>${project.basedir}/src/main/groovy/parselogs.groovy</source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Exception for the enforcer plugin, because we have to depend explicitly on xml-apis 1.4.01 for htmlunit tests, see related comment in the dependency declaration around line 65. -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <configuration>
              <rules>
                <bannedDependencies>
                  <includes>
                    <include>xml-apis:xml-apis:1.4.01:jar:test</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- This profile will run ui-tests on a real browser - use to run them on your machine -->
    <profile>
      <id>ui-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>${leaveContainerRunningAndDontExecuteTests}</skipTests>
              <includes>
                <include>**/*Test.java</include>
              </includes>
              <excludes>
                <exclude>-apparently-we-really-need-to-override-the-exclude-oh-well-</exclude>
              </excludes>
            </configuration>
          </plugin>
          <!-- We do not execute the web-crawler when running UI tests -->
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <executions>
              <execution>
                <id>web-crawler</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>web-crawler-travel-demo</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- enabled xvfb to be able to run on a separate VM in headless mode.-->
    <profile>
      <id>start-xvfb</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>selenium-maven-plugin</artifactId>
            <executions>
              <!-- run in headless mode. See http://mojo.codehaus.org/selenium-maven-plugin/examples/headless-with-xvfb.html -->
              <execution>
                <id>xvfb</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>xvfb</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>manual-tests</id>
      <properties>
        <leaveContainerRunningAndDontExecuteTests>true</leaveContainerRunningAndDontExecuteTests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <executions>
              <execution>
                <id>web-crawler</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>web-crawler-travel-demo</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>log-parser</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <executions>
              <execution>
                <id>run</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>start</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>stop</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>tomcat80</id>
      <properties>
        <containerId>tomcat8x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>org.apache.tomcat</containerGroupId>
        <containerArtifactId>tomcat</containerArtifactId>
        <containerVersion>8.0.20</containerVersion>
      </properties>
    </profile>
    <profile>
      <id>tomcat70</id>
      <properties>
        <containerId>tomcat7x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>org.apache.tomcat</containerGroupId>
        <containerArtifactId>tomcat</containerArtifactId>
        <containerVersion>7.0.55</containerVersion>
      </properties>
    </profile>
    <profile>
      <id>tomcat60</id>
      <properties>
        <containerId>tomcat6x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>org.apache.tomcat</containerGroupId>
        <containerArtifactId>catalina</containerArtifactId>
        <containerVersion>6.0.32</containerVersion>
      </properties>
    </profile>
    <profile>
      <!-- memory issues with jsp - cargo.jvmargs not supported -->
      <id>jetty6-standalone</id>
      <properties>
        <containerId>jetty6x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>org.mortbay.jetty</containerGroupId>
        <containerArtifactId>jetty</containerArtifactId>
        <containerVersion>6.1.22</containerVersion>
      </properties>
    </profile>
    <profile>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <id>jetty9-standalone</id>
      <properties>
        <containerId>jetty9x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>org.eclipse.jetty</containerGroupId>
        <containerArtifactId>jetty-distribution</containerArtifactId>
        <containerVersion>9.2.10.v20150310</containerVersion>
      </properties>
    </profile>
    <profile>
      <!-- this currently doesn't work with jsp -->
      <id>jetty6-embedded</id>
      <properties>
        <containerId>jetty6x</containerId>
        <containerType>embedded</containerType>
        <configType>???</configType>
      </properties>
    </profile>
    <profile>
      <id>tomcat55</id>
      <properties>
        <containerId>tomcat5x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>tomcat</containerGroupId>
        <containerArtifactId>apache-tomcat</containerArtifactId>
        <containerVersion>5.5.23</containerVersion>
      </properties>
    </profile>
    <profile>
      <id>tomcat50</id>
      <properties>
        <containerId>tomcat5x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>tomcat</containerGroupId>
        <containerArtifactId>catalina</containerArtifactId>
        <containerVersion>5.0.28</containerVersion>
      </properties>
    </profile>
    <profile>
      <id>jboss42</id>
      <properties>
        <containerId>jboss4x</containerId>
        <containerType>installed</containerType>
        <configType>standalone</configType>
        <containerGroupId>jboss</containerGroupId>
        <containerArtifactId>jboss</containerArtifactId>
        <containerVersion>4.2.2.GA</containerVersion>
        <jvmargs>
          -Djava.security.auth.login.config=file://XXXXX/magnolia-trunk/magnolia-webapp/target/magnolia-webapp-3.5-SNAPSHOT/WEB-INF/config/jaas.config
          -Djboss.home.dir=${cargo.installDir}/jboss-4.2.2.GA/jboss-4.2.2.GA
          -Djboss.server.home.dir=${cargo.installDir}/jboss-4.2.2.GA/jboss-4.2.2.GA/server/default
          -Djboss.server.home.url=file:/${cargo.installDir}/jboss-4.2.2.GA/jboss-4.2.2.GA/server/default
          -Djboss.server.name=jboss4x
        </jvmargs>
      </properties>
    </profile>
    <profile>
      <id>debug</id>
      <properties>
        <cargoDebugJvmArgs>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999</cargoDebugJvmArgs>
      </properties>
    </profile>
  </profiles>

</project>
